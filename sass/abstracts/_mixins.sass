@charset 'UTF-8'

// MIXINS
    
@mixin respond-to( $condition )
    @if $condition == 'initialize'
        @media only screen and ( min-width: 1px )
            @content
    @if $condition == 'small'
        @media only screen and ( min-width: $break-small )
            @content
    @if $condition == 'medium'
        @media only screen and ( min-width: $break-medium )
            @content
    @if $condition == 'large'
        @media only screen and ( min-width: $break-large )
            @content
    @if $condition == 'extra-large'
        @media only screen and ( min-width: $break-extra-large )
            @content
    @if $condition == 'super-large'
        @media only screen and ( min-width: $break-super-large )
            @content
    @if $condition == 'largest'
        @media only screen and ( min-width: $break-largest )
            @content

// Border radius
@mixin radius($radius: 5px)
    border-radius: $radius

// Text shadow
@mixin ts($tsval: 0 1px 0 #fff)
    text-shadow: $tsval

// Box shadow
@mixin bs($bsval: 0 0 .83em #333, $due: 0 0 0 transparent)
    box-shadow: $bsval, $due

// Opacity
@mixin opacity($opacity)
    opacity: $opacity

// Transitions
@mixin transition($transition: all linear .2s)
    transition: $transition

// Transforms
@mixin transform($transform: translate3d(0, 0, 0))
    transform: $transform

// Animations
@mixin animation($name)
    animation: #{name}

// Keyframes
@mixin keyframes($animation-name)
    @keyframes #{$animation-name}
        @content

// Delay
@mixin delay($delay: 0s)
    transition-delay: $delay

@mixin strip($lines: 1)
    text-overflow: ellipsis

@function strip-unit($num)
    @return $num / ($num * 0 + 1)

// retina.scss
// A helper mixin for applying high-resolution background images (http://www.retinajs.com)

// Submitted by Nathan Crank
// nathancrank.com

@mixin at2x($path, $ext: 'jpg', $w: auto, $h: auto)
    $at1x-path: '#{$path}.#{$ext}'
    $at2x-path: '#{$path}@2x.#{$ext}'

    background-image: url('#{$at1x-path}')
    background-position: center
    background-repeat: no-repeat

    @media all and (min-device-pixel-ratio: 1.5)
        background-image: url('#{$at2x-path}')
        background-size: $w $h

// Utilities
// -------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
@mixin clearfix
    zoom: 1

    &::before
        content: ' '
        display: table

    &::after
        content: ' '
        display: table

    &::after
        clear: both

@mixin linear-gradient($direction, $color-stops...)
    // Direction has been omitted and happens to be a color-stop
    @if is-direction($direction) == false
        $color-stops: $direction, $color-stops
        $direction: 180deg

    background: nth(nth($color-stops, 1), 1)
