@charset 'UTF-8'

// MIXINS
    
@mixin respond-to( $condition )
    @if $condition == 'initialize'
        @media only screen and ( min-width: 1px )
            @content
    @if $condition == 'small'
        @media only screen and ( min-width: $break-small )
            @content
    @if $condition == 'medium'
        @media only screen and ( min-width: $break-medium )
            @content
    @if $condition == 'large'
        @media only screen and ( min-width: $break-large )
            @content
    @if $condition == 'extra-large'
        @media only screen and ( min-width: $break-extra-large )
            @content
    @if $condition == 'super-large'
        @media only screen and ( min-width: $break-super-large )
            @content
    @if $condition == 'largest'
        @media only screen and ( min-width: $break-largest )
            @content

// Border radius
@mixin radius($radius: 5px)
    border-radius: $radius

// Text shadow
@mixin ts($tsval: 0px 1px 0px #fff)
    text-shadow: $tsval

// Box shadow
@mixin bs($bsval: 0px 0px 0.83em #333, $due: 0 0 0 transparent)
    -moz-box-shadow: $bsval, $due
    -webkit-box-shadow: $bsval, $due
    -o-box-shadow: $bsval, $due
    box-shadow: $bsval, $due

// Opacity
@mixin opacity($opacity)
    opacity: $opacity
    -moz-opacity: $opacity

// Transitions
@mixin transition($transition: all linear .2s)
    -webkit-transition: $transition
    -moz-transition: $transition
    -o-transition: $transition
    -ms-transition: $transition
    transition: $transition

// Transforms
@mixin transform($transform: translate3d(0, 0, 0))
    -webkit-transform: $transform
    -moz-transform: $transform
    -ms-transform: $transform
    -o-transform: $transform
    transform: $transform

@mixin animation($animate...)
    $max: length($animate)
    $animations: ''

    @for $i from 1 through $max
        $animations: #{$animations + nth($animate, $i)}

        @if $i < $max
            $animations: #{$animations + ", "}

    -webkit-animation: $animations
    -moz-animation:    $animations
    -o-animation:      $animations
    animation:         $animations

@mixin keyframes($animationName)
    @-webkit-keyframes #{$animationName}
        @content
    @-moz-keyframes #{$animationName}
        @content
    @-o-keyframes #{$animationName}
        @content
    @keyframes #{$animationName}
        @content

// Delay
@mixin delay($delay: 0s)
    -webkit-animation-delay: $delay
    -moz-animation-delay: $delay
    -o-animation-delay: $delay
    -ms-animation-delay: $delay
    delay: $delay

@mixin strip($lines: 1)
    overflow: hidden
    text-overflow: ellipsis
    display: -webkit-box
    -webkit-box-orient: vertical
    -webkit-line-clamp: $lines

@function strip-unit($num)
    @return $num / ($num * 0 + 1)

// retina.scss
// A helper mixin for applying high-resolution background images (http://www.retinajs.com)

// Submitted by Nathan Crank
// nathancrank.com

@mixin at2x($path, $ext: "jpg", $w: auto, $h: auto)
    $at1x_path: "#{$path}.#{$ext}"
    $at2x_path: "#{$path}@2x.#{$ext}"

    background-image: url("#{$at1x_path}")
    background-repeat: no-repeat
    background-position: center

    @media all and (-webkit-min-device-pixel-ratio : 1.5)
        background-image: url("#{$at2x_path}")
        background-size: $w $h
    @media all and (-o-min-device-pixel-ratio: 3/2)
        background-image: url("#{$at2x_path}")
        background-size: $w $h
    @media all and (min--moz-device-pixel-ratio: 1.5)
        background-image: url("#{$at2x_path}")
        background-size: $w $h
    @media all and (min-device-pixel-ratio: 1.5)
        background-image: url("#{$at2x_path}")
        background-size: $w $h

// Utilities
// -------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
@mixin clearfix()
    zoom: 1
    &:before,
    &:after
        content: " "
        display: table
    &:after
        clear: both

@mixin linear-gradient($direction, $color-stops...)
    // Direction has been omitted and happens to be a color-stop
    @if is-direction($direction) == false
        $color-stops: $direction, $color-stops
        $direction: 180deg

    background: nth(nth($color-stops, 1), 1)

@mixin radial-gradient($from, $to)
    background: -moz-linear-gradient(top, $from 0%, $to 100%)
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$from), color-stop(100%,$to))
    background: -webkit-linear-gradient(top, $from 0%,$to 100%)
    background: -o-linear-gradient(top, $from 0%,$to 100%)